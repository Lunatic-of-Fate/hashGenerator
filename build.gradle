plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id("io.spring.dependency-management") version "1.1.7"
    id 'com.google.cloud.tools.jib' version '3.4.2' // Для Docker-сборки
}

group = 'org.lunatic'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database
    runtimeOnly 'org.postgresql:postgresql'

    // Utils
    implementation 'org.modelmapper:modelmapper:2.4.4'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'
    testImplementation 'info.solidsoft.mockito:mockito-java8:2.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:postgresql:1.20.4'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.4'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

bootJar {
    archiveBaseName = 'hash-generator'
    archiveClassifier = ''
    mainClass = 'org.lunatic.Main'
}

tasks.register('buildDocker', Exec) {
    dependsOn 'bootJar'
    commandLine 'docker', 'build', '-t', 'hash-generator:v1.0', '.'
}

tasks.register('runDocker', Exec) {
    dependsOn 'clean', 'buildDocker'
    commandLine 'docker', 'run', '-d', '--name',
            'hash-generator', '--network', 'my-network', '-p', '8080:8080',
            '-e', 'POSTGRES_HOST=postgres-container',
            '-e', 'POSTGRES_DB=postgres',
            '-e', 'POSTGRES_USER=postgres',
            '-e', 'POSTGRES_PASSWORD=123',
            'hash-generator:v1.0'
}